{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jdavid/Documents/idken/idken3/idken/src/Components/PriceDialog/PriceDialog.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\n\nvar PriceDialog = function (_Component) {\n  _inherits(PriceDialog, _Component);\n\n  var _super = _createSuper(PriceDialog);\n\n  function PriceDialog() {\n    var _this;\n\n    _classCallCheck(this, PriceDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      lastOpenedStatus: false\n    };\n    return _this;\n  }\n\n  _createClass(PriceDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          min = _this$state.min,\n          max = _this$state.max;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, React.createElement(Dialog, {\n        open: this.props.open,\n        onClose: function onClose() {\n          _this2.props.onClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, \"Enter price range\"), React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, React.createElement(TextField, {\n        value: min,\n        type: \"number\",\n        style: {\n          width: 70\n        },\n        placeholder: \"Min\",\n        label: \"Min\",\n        onChange: function onChange(e) {\n          var val = parseInt(e.target.value, 10);\n\n          if (Number.isNaN(val) || val < 0 || val > 100000) {\n            return;\n          }\n\n          _this2.setState({\n            min: val\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }), React.createElement(TextField, {\n        value: max,\n        type: \"number\",\n        style: {\n          width: 70,\n          marginLeft: 20\n        },\n        placeholder: \"Max\",\n        label: \"Max\",\n        onChange: function onChange(e) {\n          var val = parseInt(e.target.value, 10);\n\n          if (Number.isNaN(val) || val < 0 || val > 100000) {\n            return;\n          }\n\n          _this2.setState({\n            max: val\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      })), React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        style: {\n          width: 50\n        },\n        onClick: function onClick() {\n          _this2.props.onSave(min, max);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }\n      }, \"OK\"), React.createElement(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        style: {\n          width: 50,\n          marginLeft: 5\n        },\n        onClick: function onClick() {\n          _this2.props.onClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, \"Cancel\")))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.open === true && state.lastOpenedStatus === false) {\n        return {\n          min: props.min,\n          max: props.max,\n          lastOpenedStatus: true\n        };\n      }\n\n      return {\n        lastOpenedStatus: props.open\n      };\n    }\n  }]);\n\n  return PriceDialog;\n}(Component);\n\nexport default PriceDialog;","map":{"version":3,"sources":["/Users/jdavid/Documents/idken/idken3/idken/src/Components/PriceDialog/PriceDialog.js"],"names":["React","Component","Button","Dialog","DialogTitle","TextField","PriceDialog","state","lastOpenedStatus","min","max","props","open","onClose","display","flexDirection","alignItems","padding","width","e","val","parseInt","target","value","Number","isNaN","setState","marginLeft","onSave"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass PriceDialog extends Component {\n  state = {\n    lastOpenedStatus: false,\n  };\n\n\n  // Only when this dialog is opened, copy the prices to local state.\n  static getDerivedStateFromProps(props, state) {\n    if (props.open === true && state.lastOpenedStatus === false) {\n      return {\n        min: props.min,\n        max: props.max,\n        lastOpenedStatus: true,\n      };\n    }\n\n    return { lastOpenedStatus: props.open };\n  }\n\n  render() {\n    let { min, max } = this.state;\n\n    return (\n      <div>\n        <Dialog\n          open={this.props.open}\n          onClose={() => {\n            this.props.onClose();\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\"\n            }}\n          >\n            <DialogTitle>Enter price range</DialogTitle>\n\n            <div style={{ display: \"flex\", padding: 20 }}>\n              <TextField\n                value={min}\n                type=\"number\"\n                style={{ width: 70 }}\n                placeholder=\"Min\"\n                label=\"Min\"\n                onChange={e => {\n                  let val = parseInt(e.target.value, 10);\n                  if (\n                    Number.isNaN(val) ||\n                    val < 0 ||\n                    val > 100000\n                  ) {\n                    return;\n                  }\n                  this.setState({\n                    min: val\n                  });\n                }}\n              />\n              <TextField\n                value={max}\n                type=\"number\"\n                style={{ width: 70, marginLeft: 20 }}\n                placeholder=\"Max\"\n                label=\"Max\"\n                onChange={e => {\n                  let val = parseInt(e.target.value, 10);\n\n                  if (\n                    Number.isNaN(val) ||\n                    val < 0 ||\n                    val > 100000\n                  ) {\n                    return;\n                  }\n                  this.setState({\n                    max: val\n                  });\n                }}\n              />\n            </div>\n            <div style={{ display: \"flex\", padding: 20 }}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                style={{ width: 50 }}\n                onClick={() => {\n                  this.props.onSave(min, max);\n                }}\n              >\n                OK\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                style={{ width: 50, marginLeft: 5 }}\n                onClick={() => {\n                  this.props.onClose();\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default PriceDialog;\n"]},"metadata":{},"sourceType":"module"}