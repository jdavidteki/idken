{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jdavid/Documents/idken/idken3/idken/src/Components/ProductsHeader/ProductsHeader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PriceDialog from \"../PriceDialog/PriceDialog\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withRouter } from \"react-router-dom\";\n\nvar ProductsHeader = function (_Component) {\n  _inherits(ProductsHeader, _Component);\n\n  var _super = _createSuper(ProductsHeader);\n\n  function ProductsHeader() {\n    var _this;\n\n    _classCallCheck(this, ProductsHeader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      openPriceDialog: false\n    };\n    return _this;\n  }\n\n  _createClass(ProductsHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          parsedQS = _this$props.parsedQS,\n          totalItemsCount = _this$props.totalItemsCount,\n          updateQueryString = _this$props.updateQueryString;\n      var usePriceFilter = parsedQS.usePriceFilter === \"true\";\n      var minPrice = parsedQS.minPrice || 0;\n      var maxPrice = parsedQS.maxPrice || 1000;\n      var sortValue = parsedQS.sortValue || \"lh\";\n      var keyword = parsedQS.term;\n      var category = parsedQS.category;\n      var subtitle = React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: 12,\n          color: \"gray\",\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, totalItemsCount + \" result\" + (totalItemsCount === 1 ? \" \" : \"s \") + (keyword ? \"for \" : \"\")), keyword && React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 12,\n          color: \"gray\",\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, keyword));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          padding: 10,\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, React.createElement(\"div\", {\n        style: {\n          flex: 1,\n          fontSize: 24\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, category ? category : \"Popular Products\"), subtitle), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          color: \"primary\",\n          checked: usePriceFilter,\n          onChange: function onChange(e) {\n            updateQueryString({\n              usePriceFilter: e.target.checked,\n              page: 1\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }),\n        label: \"Filter by price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }), usePriceFilter && React.createElement(Tooltip, {\n        title: \"Click to change range\",\n        disableFocusListener: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        variant: \"outlined\",\n        style: {\n          marginRight: 20\n        },\n        onClick: function onClick() {\n          _this2.setState({\n            openPriceDialog: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, minPrice + \"$ - \" + maxPrice + \"$\")), React.createElement(Select, {\n        value: sortValue,\n        onChange: function onChange(e) {\n          updateQueryString({\n            sortValue: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, React.createElement(MenuItem, {\n        value: \"lh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, \"Sort by price: low to high\"), React.createElement(MenuItem, {\n        value: \"hl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }, \"Sort by price: high to low\"))), React.createElement(PriceDialog, {\n        open: this.state.openPriceDialog,\n        min: minPrice,\n        max: maxPrice,\n        onSave: function onSave(min, max) {\n          _this2.setState({\n            openPriceDialog: false\n          });\n\n          updateQueryString({\n            minPrice: min,\n            maxPrice: max,\n            page: 1\n          });\n        },\n        onClose: function onClose() {\n          return _this2.setState({\n            openPriceDialog: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ProductsHeader;\n}(Component);\n\nexport default withRouter(ProductsHeader);","map":{"version":3,"sources":["/Users/jdavid/Documents/idken/idken3/idken/src/Components/ProductsHeader/ProductsHeader.js"],"names":["React","Component","Button","Tooltip","PriceDialog","MenuItem","Select","FormControlLabel","Checkbox","withRouter","ProductsHeader","state","openPriceDialog","props","parsedQS","totalItemsCount","updateQueryString","usePriceFilter","minPrice","maxPrice","sortValue","keyword","term","category","subtitle","fontSize","color","marginTop","fontWeight","padding","display","alignItems","flex","e","target","checked","page","marginRight","setState","value","min","max"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;IAEMC,c;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,eAAe,EAAE;AADX,K;;;;;;6BAIC;AAAA;;AAAA,wBACgD,KAAKC,KADrD;AAAA,UACDC,QADC,eACDA,QADC;AAAA,UACSC,eADT,eACSA,eADT;AAAA,UAC0BC,iBAD1B,eAC0BA,iBAD1B;AAIP,UAAIC,cAAc,GAAGH,QAAQ,CAACG,cAAT,KAA4B,MAAjD;AACA,UAAIC,QAAQ,GAAGJ,QAAQ,CAACI,QAAT,IAAqB,CAApC;AACA,UAAIC,QAAQ,GAAGL,QAAQ,CAACK,QAAT,IAAqB,IAApC;AACA,UAAIC,SAAS,GAAGN,QAAQ,CAACM,SAAT,IAAsB,IAAtC;AACA,UAAIC,OAAO,GAAGP,QAAQ,CAACQ,IAAvB;AACA,UAAIC,QAAQ,GAAGT,QAAQ,CAACS,QAAxB;AAEA,UAAIC,QAAQ,GACV,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,KAAK,EAAE,MAAvB;AAA+BC,UAAAA,SAAS,EAAE;AAA1C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGZ,eAAe,GACd,SADD,IAEEA,eAAe,KAAK,CAApB,GAAwB,GAAxB,GAA8B,IAFhC,KAGEM,OAAO,GAAG,MAAH,GAAY,EAHrB,CADH,CADF,EAOGA,OAAO,IACN;AACE,QAAA,KAAK,EAAE;AACLO,UAAAA,UAAU,EAAE,MADP;AAELH,UAAAA,QAAQ,EAAE,EAFL;AAGLC,UAAAA,KAAK,EAAE,MAHF;AAILC,UAAAA,SAAS,EAAE;AAJN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQGN,OARH,CARJ,CADF;AAuBA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAAEQ,UAAAA,OAAO,EAAE,EAAX;AAAeC,UAAAA,OAAO,EAAE,MAAxB;AAAgCC,UAAAA,UAAU,EAAE;AAA5C,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWP,UAAAA,QAAQ,EAAE;AAArB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMF,QAAQ,GAAGA,QAAH,GAAc,kBAA5B,CADF,EAEGC,QAFH,CADF,EAME,oBAAC,gBAAD;AACE,QAAA,OAAO,EACL,oBAAC,QAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,OAAO,EAAEP,cAFX;AAGE,UAAA,QAAQ,EAAE,kBAAAgB,CAAC,EAAI;AACbjB,YAAAA,iBAAiB,CAAC;AAChBC,cAAAA,cAAc,EAAEgB,CAAC,CAACC,MAAF,CAASC,OADT;AAEhBC,cAAAA,IAAI,EAAE;AAFU,aAAD,CAAjB;AAID,WARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAaE,QAAA,KAAK,EAAC,iBAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAqBGnB,cAAc,IACb,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAuC,QAAA,oBAAoB,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAE;AAAEoB,UAAAA,WAAW,EAAE;AAAf,SAFT;AAGE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACC,QAAL,CAAc;AACZ1B,YAAAA,eAAe,EAAE;AADL,WAAd;AAGD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASGM,QAAQ,GAAG,MAAX,GAAoBC,QAApB,GAA+B,GATlC,CADF,CAtBJ,EAoCE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEC,SADT;AAEE,QAAA,QAAQ,EAAE,kBAAAa,CAAC,EAAI;AACbjB,UAAAA,iBAAiB,CAAC;AAAEI,YAAAA,SAAS,EAAEa,CAAC,CAACC,MAAF,CAASK;AAAtB,WAAD,CAAjB;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCANF,EAOE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAPF,CApCF,CADF,EAiDE,oBAAC,WAAD;AACE,QAAA,IAAI,EAAE,KAAK5B,KAAL,CAAWC,eADnB;AAEE,QAAA,GAAG,EAAEM,QAFP;AAGE,QAAA,GAAG,EAAEC,QAHP;AAIE,QAAA,MAAM,EAAE,gBAACqB,GAAD,EAAMC,GAAN,EAAc;AACpB,UAAA,MAAI,CAACH,QAAL,CAAc;AAAE1B,YAAAA,eAAe,EAAE;AAAnB,WAAd;;AACAI,UAAAA,iBAAiB,CAAC;AAAEE,YAAAA,QAAQ,EAAEsB,GAAZ;AAAiBrB,YAAAA,QAAQ,EAAEsB,GAA3B;AAAgCL,YAAAA,IAAI,EAAE;AAAtC,WAAD,CAAjB;AACD,SAPH;AAQE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACE,QAAL,CAAc;AACZ1B,YAAAA,eAAe,EAAE;AADL,WAAd,CADO;AAAA,SARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjDF,CADF;AAkED;;;;EAzG0BX,S;;AA4G7B,eAAeQ,UAAU,CAACC,cAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PriceDialog from \"../PriceDialog/PriceDialog\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ProductsHeader extends Component {\n  state = {\n    openPriceDialog: false\n  };\n\n  render() {\n    let { parsedQS, totalItemsCount, updateQueryString } = this.props;\n  \n    // Grab some values from the query string\n    let usePriceFilter = parsedQS.usePriceFilter === \"true\";\n    let minPrice = parsedQS.minPrice || 0;\n    let maxPrice = parsedQS.maxPrice || 1000;\n    let sortValue = parsedQS.sortValue || \"lh\";\n    let keyword = parsedQS.term;\n    let category = parsedQS.category;\n\n    let subtitle = (\n      <React.Fragment>\n        <span style={{ fontSize: 12, color: \"gray\", marginTop: 5 }}>\n          {totalItemsCount +\n            \" result\" +\n            (totalItemsCount === 1 ? \" \" : \"s \") +\n            (keyword ? \"for \" : \"\")}\n        </span>\n        {keyword && (\n          <span\n            style={{\n              fontWeight: \"bold\",\n              fontSize: 12,\n              color: \"gray\",\n              marginTop: 5\n            }}\n          >\n            {keyword}\n          </span>\n        )}\n      </React.Fragment>\n    );\n\n    return (\n      <div>\n        <div style={{ padding: 10, display: \"flex\", alignItems: \"center\" }}>\n          <div style={{ flex: 1, fontSize: 24 }}>\n            <div>{category ? category : \"Popular Products\"}</div>\n            {subtitle}\n          </div>\n\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                checked={usePriceFilter}\n                onChange={e => {\n                  updateQueryString({\n                    usePriceFilter: e.target.checked,\n                    page: 1\n                  });\n                }}\n              />\n            }\n            label=\"Filter by price\"\n          />\n          {usePriceFilter && (\n            <Tooltip title=\"Click to change range\" disableFocusListener>\n              <Button\n                variant=\"outlined\"\n                style={{ marginRight: 20 }}\n                onClick={() => {\n                  this.setState({\n                    openPriceDialog: true\n                  });\n                }}\n              >\n                {minPrice + \"$ - \" + maxPrice + \"$\"}\n              </Button>\n            </Tooltip>\n          )}\n          <Select\n            value={sortValue}\n            onChange={e => {\n              updateQueryString({ sortValue: e.target.value });\n            }}\n          >\n            <MenuItem value={\"lh\"}>Sort by price: low to high</MenuItem>\n            <MenuItem value={\"hl\"}>Sort by price: high to low</MenuItem>\n          </Select>\n        </div>\n\n        {/* This is dialog which opens up for setting price filter */}\n        <PriceDialog\n          open={this.state.openPriceDialog}\n          min={minPrice}\n          max={maxPrice}\n          onSave={(min, max) => {\n            this.setState({ openPriceDialog: false });\n            updateQueryString({ minPrice: min, maxPrice: max, page: 1 });\n          }}\n          onClose={() =>\n            this.setState({\n              openPriceDialog: false\n            })\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ProductsHeader);\n"]},"metadata":{},"sourceType":"module"}